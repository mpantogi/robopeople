{"version":3,"sources":["components/Cardlist.js","components/SearchBox.js","components/ErrorBoundry.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Cardlist","robots","Error","SearchBox","searchfield","searchChange","className","type","placeholder","onChange","ErrorBoundry","props","state","hasError","error","info","this","setState","children","Component","Scroll","style","overflowY","border","height","App","onSearchChange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","name","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAyBeA,EAtBE,SAAC,GAAiB,EAAdC,OAEnB,MAAM,IAAIC,MAAO,YCUJC,EAbG,SAAC,GAAiC,EAA/BC,YAAgC,IAAnBC,EAAkB,EAAlBA,aACjC,OACC,qBAAKC,UAAU,MAAf,SACC,uBACCA,UAAU,0BACVC,KAAK,SACLC,YAAY,gBACZC,SAAUJ,OCcCK,E,kDApBd,WAAYC,GAAQ,IAAD,8BAClB,cAAMA,IACDC,MAAQ,CACZC,UAAU,GAHO,E,qDAOnB,SAAkBC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAU,M,oBAG1B,WACC,OAAIG,KAAKJ,MAAMC,SACP,0DAEDG,KAAKL,MAAMO,a,GAhBOC,aCQZC,G,MARA,SAACT,GACf,OACC,qBAAKU,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACEb,EAAMO,aC6CKO,E,kDAvCd,aAAe,IAAD,8BACb,gBAaDC,eAAiB,SAACC,GACjB,EAAKV,SAAS,CAACb,YAAauB,EAAMC,OAAOC,SAbzC,EAAKjB,MAAQ,CACZX,OAAQ,GACRG,YAAa,IAJD,E,qDAQf,WAAoB,IAAD,OAClB0B,MAAM,8CACJC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAI,EAAKjB,SAAS,CAAEhB,OAAQiC,S,oBAOxC,WACC,MAA8BlB,KAAKJ,MAA3BX,EAAR,EAAQA,OAAOG,EAAf,EAAeA,YACT+B,EAAiBlC,EAAOmC,QAAO,SAAAC,GACpC,OAAOA,EAAMC,KAAKC,cAAcC,SAASpC,EAAYmC,kBAErD,OAAQtC,EAAOwC,OAGd,sBAAKnC,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,wBACA,cAAC,EAAD,CAAWD,aAAcW,KAAKU,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUzB,OAAQkC,WAPtB,6C,GAzBehB,aCEHuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.acc0b5fb.chunk.js","sourcesContent":["import React from 'react';\nimport Card from './Card';\n\nconst Cardlist = ( { robots } ) => {\n\tif (true) {\n\t\tthrow new Error ('NOOOOOO');\n\t}\n\treturn (\n\t<div>\n\t{\n    \trobots.map((user, i) => {\n\t\t\treturn (\n\t\t\t\t<Card \n\t\t\t\t\tkey={i}\n\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\tname={robots[i].name} \n\t\t\t\t\temail={robots[i].email}\n\t\t\t\t\t/>\n\t\t\t);\n\t\t})\n     }\n    </div>\t\n\t);\n}\n\nexport default Cardlist;","import React from 'react';\n\nconst SearchBox = ({ searchfield, searchChange}) => {\n\treturn (\n\t\t<div className='pa2'>\n\t\t\t<input\n\t\t\t\tclassName='pa3 ba bg-lightest-blue'\n\t\t\t\ttype='search' \n\t\t\t\tplaceholder='search robots' \n\t\t\t\tonChange={searchChange}\n\t\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default SearchBox;","import React, { Component } from 'react';\n\nclass ErrorBoundry extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t}\n\t}\n\n\tcomponentDidCatch(error, info) {\n\t\tthis.setState({hasError: true})\t\n\t}\n\n\trender() {\n\t\tif (this.state.hasError) {\n\t\t\treturn <h1>Oooops. That is not good</h1>\n\t\t}\n\t\treturn this.props.children\n\t}\n\n}\n\nexport default ErrorBoundry","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style={{ overflowY: 'scroll', border: '2px solid black', height: '800px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n};\n\nexport default Scroll;","import React, { Component} from 'react';\nimport Cardlist from '../components/Cardlist';\n//import { robots } from './robots';\nimport SearchBox from '../components/SearchBox';\nimport \tErrorBoundry from '../components/ErrorBoundry';\nimport './App.css';\nimport Scroll from '../components/Scroll'\n\n\n\nclass App extends Component {\n\tconstructor() {\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\ncomponentDidMount(){\n\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t.then(response=> response.json())\n\t\t.then(users => this.setState({ robots: users}));\n}\n\n\tonSearchChange = (event) => {\n\t\tthis.setState({searchfield: event.target.value})\n\t}\n\n\trender() {\n\t\tconst { robots,searchfield} = this.state\n\t\tconst filteredRobots = robots.filter(robot =>{\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\n\t\t})\n\t\t\treturn !robots.length ?\n\t\t\t<h1>Loading</h1> :\n\t\t\t (\n\t\t\t\t<div className='tc'>\n\t\t\t\t\t<h1 className='f1'>RoboPeople</h1>\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t<ErrorBoundry>\n\t\t\t\t\t\t\t<Cardlist robots={filteredRobots}/>\n\t\t\t\t\t\t</ErrorBoundry>\n\t\t\t\t\t</Scroll>\n\t\t\t\t</div>\n\t\t\t );\n\t}\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import Card from './Card';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n//import { robots } from './robots';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}